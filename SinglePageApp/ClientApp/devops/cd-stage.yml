parameters:
  build_artifact_name: ""
  source_id: ""

stages:
  - stage: DeployToAWS
    displayName: 'Deploy to AWS'
    jobs: 
    - job: AddConfiguration
      displayName: 'Add Configuration'
      steps:
      - checkout: none

      - task: DownloadPipelineArtifact@2
        displayName: 'Unstash source'
        inputs:
          artifact: ${{ parameters.source_id }}
          path: $(Build.SourcesDirectory)

      - task: PowerShell@2
        displayName: Append config values to env file
        inputs:
          filePath: ./SinglePageApp/ClientApp/devops/config-environment-variables.ps1
          arguments:
            -apiBaseUrl "Hello Jimmy"
            -envFilePath "./SinglePageApp/ClientApp/public/globalVariables.js"

      - bash: |
          echo "##vso[task.setvariable variable=jimmyWithOutput;isOutput=true]Jimmy 2"
        displayName: "assign with output"
        name: WithOutput

      - powershell: echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the value"
        name: setvarStep

      - bash: |
           echo $(WithOutput.jimmyWithOutput)
        displayName: "testing"

      - task: ArchiveFiles@2
        displayName: Prepare Configuration Artifacts
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/SinglePageApp/ClientApp/public/globalVariables.js'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/Packages/$(Build.BuildId)/config.zip'
          replaceExistingArchive: true

      - publish: '$(Build.ArtifactStagingDirectory)/Packages/$(Build.BuildId)/config.zip'
        displayName: Publish Configuration Artifacts
        artifact: config_$(Build.BuildId)

    - job: test1
      displayName: "test 1"
      dependsOn: AddConfiguration
      variables:
        myVarFromJobA: $[ dependencies.AddConfiguration.outputs['setvarStep.myOutputVar'] ]  # map in the variable
      pool:
        vmImage: ubuntu-latest
        demands:
        - npm
      steps:
        - checkout: none

    - job: test2
      displayName: "test 2"
      dependsOn: AddConfiguration
      variables:
        myVarFromJobA: $[ dependencies.AddConfiguration.outputs[`WithOutput.jimmyWithOutput`] ]  # map in the variable
      pool:
        vmImage: ubuntu-latest
        demands:
        - npm
      steps:
        - checkout: none

        - script: echo $(myVarFromJobA)
          name: echovar

    - deployment: DeployToAWS
      dependsOn: AddConfiguration
      variables:
        config_artifact_name: $[dependencies.AddConfiguration.outputs[`WithOutput.jimmyWithOutput`]]
      displayName: Deploy to AWS S3 bucket
      pool:
        vmImage: "ubuntu-latest"
      environment: $(ADO_Env)
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                displayName: "Download build artifact"
                artifact: ${{ parameters.build_artifact_name }}

              - bash: |
                  echo $(config_artifact_name)
                displayName: "testing"

              - task: ExtractFiles@1
                displayName: "Extra build files from artifacts"
                inputs:
                  archiveFilePatterns: "$(Pipeline.Workspace)/**/build.zip"
                  destinationFolder: $(Build.ArtifactStagingDirectory)
                  cleanDestinationFolder: true

              - download: current
                displayName: "Dowload configuration artifacts"
                artifact: config_$(Build.BuildId)

              - task: ExtractFiles@1
                displayName: "Extract configuration files from artifacts"
                inputs:
                  archiveFilePatterns: "$(Pipeline.Workspace)/**/config.zip"
                  destinationFolder: $(Build.ArtifactStagingDirectory)
                  cleanDestinationFolder: true

              # This is the AWS SDK S3 Upload task. Because the friendly name of the task clashes with
              # another extension, we have to specify the task via the guid, which I found by looking at
              # the source: https://github.com/aws/aws-toolkit-azure-devops/blob/master/Tasks/S3Upload/task.json
              - task: S3Upload@1
                inputs:
                  bucketName: $(AWS_S3_Bucket)
                  sourceFolder: $(Build.ArtifactStagingDirectory)
                  globExpressions: "**"
                  logRequest: true
                  logResponse: true
                  awsCredentials: $(AWS_UserName)
                  regionName: "us-east-1"